{"version":3,"sources":["services/api.js","pages/main/index.js","pages/funcionario/index.js","pages/customer/index.js","pages/new_customer/index.js","pages/user/index.js","pages/Mainfuncionarios/index.js","pages/novofuncionario/index.js","routes.js","componentes/Header/index.js","App.js","serviceWorker.js","index.js"],"names":["api","axios","create","baseURL","Main","state","customers","customerInfo","page","loadCustomers","a","get","response","data","docs","setState","nextPage","pages","pageNumber","prevPage","this","className","map","customer","key","_id","nome","dataDeNascimento","sexo","to","disabled","onClick","Component","Funcionario","deleteFuncionario","event","preventDefault","id","props","match","params","delete","alert","handleChange","target","name","value","cpf","funcionario","url","console","log","handleSubmit","put","onSubmit","defaultValue","onChange","type","Customer","deleteCustomer","New_Customer","post","User","Mainfuncionarios","funcionarios","funcionarioInfo","loadFuncionarios","NovoFuncionario","Routes","exact","path","component","Header","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0f19506d.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({baseURL: 'http://127.0.0.1:3001/api'});\r\n\r\nexport default api;","import React, {Component} from 'react';\r\nimport api from '../../services/api';\r\nimport './styles.css';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Main extends Component {\r\n    state = {\r\n        customers: [],\r\n        customerInfo: {},\r\n        page: 1,\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.loadCustomers();\r\n    }\r\n\r\n    loadCustomers = async ( page = 1 ) => {\r\n        const response = await api.get(`/customers?page=${page}`);\r\n\r\n        const { docs, ... customerInfo } = response.data;\r\n\r\n        this.setState({ customers: docs, customerInfo, page });\r\n    }\r\n\r\n    nextPage = () => {\r\n        const { page, customerInfo } = this.state;\r\n\r\n        if (page === customerInfo.pages) return;\r\n\r\n        const pageNumber = page+1;\r\n        \r\n        this.loadCustomers(pageNumber);\r\n    };\r\n    prevPage = () => {\r\n        const { page, customerInfo } = this.state;\r\n\r\n        if (page === 1) return;\r\n\r\n        const pageNumber = page - 1;\r\n\r\n        this.loadCustomers(pageNumber);\r\n    };\r\n\r\n    render(){\r\n        const {customers, page, customerInfo} = this.state;\r\n\r\n        return (\r\n            <div className=\"customer-list\">\r\n                {customers.map(customer => (\r\n                    <article key={customer._id}>\r\n                        <p><strong>Nome do cliente:</strong> {customer.nome}</p>\r\n                        <p><strong>Data de nascimento:</strong> {customer.dataDeNascimento}</p>\r\n                        <p><strong>Sexo:</strong> '{customer.sexo}'</p>\r\n                        <Link to={`/customers/${customer._id}`}>Consultar</Link>\r\n                        <br /><br />\r\n                    </article>\r\n                ))}\r\n                <div className=\"actions\">\r\n                    <button disabled={page === 1} onClick={this.prevPage}>\r\n                        Anterior\r\n                    </button>\r\n                    <Link to={`/new_customer`}>Novo cliente</Link>\r\n                    <button disabled={page === customerInfo.pages} onClick={this.nextPage}>\r\n                        Próxima\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );  \r\n    }\r\n}","import React, { Component } from 'react';\r\nimport api from '../../services/api';\r\nimport './styles.css';\r\nimport { Link } from 'react-router-dom';\r\nexport default class Funcionario extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            funcionario: {},\r\n            cpf: '',\r\n            nome: '',\r\n            url: '',\r\n        };\r\n    }\r\n    \r\n    deleteFuncionario = event => {\r\n        event.preventDefault();\r\n\r\n        const { id } = this.props.match.params;\r\n\r\n        api.delete(`/funcionarios/${id}`);\r\n\r\n        alert('sucesso!');\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({[event.target.name] : event.target.value}, ()=>{\r\n            if (this.state.cpf != '')\r\n                this.state.funcionario.cpf = this.state.cpf;\r\n            if (this.state.nome != '')\r\n                this.state.funcionario.nome = this.state.nome;\r\n            if (this.state.url != '')\r\n                this.state.funcionario.url = this.state.url;\r\n            console.log(this.state.funcionario);\r\n        });\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        const funcionario = this.state.funcionario;\r\n        \r\n        const { id } = this.props.match.params;\r\n\r\n        api.put(`/funcionarios/${id}`, funcionario);\r\n\r\n        alert('atualizado com sucesso!');\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const { id } = this.props.match.params;\r\n\r\n        const response = await api.get(`/funcionarios/${id}`);\r\n\r\n        this.setState({ funcionario: response.data });\r\n    }\r\n\r\n    render(){\r\n        const { funcionario } = this.state;\r\n        return (\r\n            <div className=\"funcionario-info\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <p><strong>CPF:</strong></p>\r\n                                </td>\r\n                                <td>\r\n                                    <input name=\"cpf\" className=\"funcionario-cpf\" defaultValue={funcionario.cpf} onChange={this.handleChange} />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <p><strong>Nome:</strong></p>\r\n                                </td>\r\n                                <td>\r\n                                    <input name=\"nome\" className=\"funcionario-name\" defaultValue={funcionario.nome} onChange={this.handleChange}/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <p><strong>URL:</strong></p>\r\n                                </td>\r\n                                <td>\r\n                                    <input name=\"url\" className=\"funcionario-cpf\" defaultValue={funcionario.cpf} onChange={this.handleChange} />\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <div className=\"actions\"><Link to={`/funcionarios`}>Voltar</Link>\r\n                        <button type=\"submit\" onClick={this.deleteFuncionario}>\r\n                            Deletar\r\n                        </button>\r\n                        <button type=\"submit\" onClick={this.handleChange}>\r\n                            Alterar\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n                 \r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport api from '../../services/api';\r\nimport './styles.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Customer extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            customer: {},\r\n            nome :'',\r\n            dataDeNascimento: '',\r\n            cpf: '',\r\n            sexo: '',\r\n        };\r\n    }\r\n\r\n    deleteCustomer = event => {\r\n        event.preventDefault();\r\n\r\n        const { id } = this.props.match.params;\r\n\r\n        api.delete(`/customers/${id}`);\r\n\r\n        alert('Cliente deletado com sucesso!');\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({[event.target.name] : event.target.value}, ()=>{\r\n            if (this.state.nome != '')\r\n                this.state.customer.nome = this.state.nome;\r\n            if (this.state.dataDeNascimento != '')\r\n                this.state.customer.dataDeNascimento = this.state.dataDeNascimento;\r\n            if (this.state.cpf != '')\r\n                this.state.customer.cpf = this.state.cpf;\r\n            if (this.state.sexo != '')\r\n                this.state.customer.sexo = this.state.sexo;\r\n            console.log(this.state.customer);\r\n        });\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        const customer = this.state.customer;\r\n        \r\n        const { id } = this.props.match.params;\r\n\r\n        api.put(`/customers/${id}`, customer);\r\n\r\n        alert('Cliente atualizado com sucesso!');\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const { id } = this.props.match.params;\r\n\r\n        const response = await api.get(`/customers/${id}`);\r\n\r\n        this.setState({ customer: response.data });\r\n    }\r\n\r\n    render(){\r\n        const { customer } = this.state;\r\n\r\n        return (\r\n            <div className=\"customer-info\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <p><strong>Nome:</strong></p>\r\n                                </td>\r\n                                <td>\r\n                                    <input name=\"nome\" className=\"customer-name\" defaultValue={customer.nome} onChange={this.handleChange}/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <p><strong>Data de Nascimento:</strong></p>\r\n                                </td>\r\n                                <td>\r\n                                    <input name=\"dataDeNascimento\" className=\"customer-birthday\" defaultValue={customer.dataDeNascimento} onChange={this.handleChange}/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <p><strong>Sexo:</strong></p>\r\n                                </td>\r\n                                <td>\r\n                                    <input name=\"sexo\" className=\"customer-sex\" defaultValue={customer.sexo} onChange={this.handleChange} />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <p><strong>CPF:</strong></p>\r\n                                </td>\r\n                                <td>\r\n                                    <input name=\"cpf\" className=\"customer-cpf\" defaultValue={customer.cpf} onChange={this.handleChange} />\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <div className=\"actions\">\r\n                        <Link to={`/customers`}>Voltar</Link>\r\n                        <button type=\"submit\" onClick={this.deleteCustomer}>\r\n                            Deletar\r\n                        </button>\r\n                        <button type=\"submit\" onClick={this.handleChange}>\r\n                            Alterar\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n                 \r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport api from '../../services/api';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class New_Customer extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            customer: {},\r\n            nome :'',\r\n            dataDeNascimento: '',\r\n            cpf: '',\r\n            sexo: '',\r\n        };\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({[event.target.name] : event.target.value}, ()=>{\r\n            if (this.state.nome != '')\r\n                this.state.customer.nome = this.state.nome;\r\n            if (this.state.dataDeNascimento != '')\r\n                this.state.customer.dataDeNascimento = this.state.dataDeNascimento;\r\n            if (this.state.cpf != '')\r\n                this.state.customer.cpf = this.state.cpf;\r\n            if (this.state.sexo != '')\r\n                this.state.customer.sexo = this.state.sexo;\r\n            console.log(this.state.customer);\r\n        });\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        const customer = this.state.customer;\r\n\r\n        //const { id } = this.props.match.params;\r\n\r\n        api.post('customers/', customer);\r\n\r\n        alert('Cliente criado com sucesso.');\r\n    }\r\n\r\n\r\n    render(){\r\n        const { customer } = this.state;\r\n\r\n        return (\r\n            <div className=\"customer-info\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <p><strong>Nome:</strong></p>\r\n                                </td>\r\n                                <td>\r\n                                    <input name=\"nome\" className=\"customer-name\" onChange={this.handleChange}/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <p><strong>Data de Nascimento:</strong></p>\r\n                                </td>\r\n                                <td>\r\n                                    <input name=\"dataDeNascimento\" className=\"customer-birthday\" onChange={this.handleChange}/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <p><strong>Sexo:</strong></p>\r\n                                </td>\r\n                                <td>\r\n                                    <input name=\"sexo\" className=\"customer-sex\" onChange={this.handleChange} />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <p><strong>CPF:</strong></p>\r\n                                </td>\r\n                                <td>\r\n                                    <input name=\"cpf\" className=\"customer-cpf\" onChange={this.handleChange} />\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <div className=\"actions\">\r\n                        <Link to={`/customers`}>Voltar</Link>\r\n                        <button type=\"submit\" onClick={this.handleChange}>\r\n                            Criar\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n                 \r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport api from '../../services/api';\r\nimport './styles.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class User extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {};\r\n    }\r\n    render(){\r\n\r\n        return (\r\n            <div className=\"index-list\">\r\n                <div className=\"actions\">\r\n                    <Link to={'/funcionarios'}>Funcionários</Link>\r\n                    <Link to={''}>Fornecedores</Link>\r\n                    <Link to={'/customers'}>Clientes</Link>\r\n                    <Link to={''}>Produtos</Link>\r\n                    <Link to={''}>Vendas</Link>\r\n                </div>\r\n            </div>\r\n        );  \r\n    }\r\n}","import React, {Component} from 'react';\r\nimport api from '../../services/api';\r\nimport './styles.css';\r\n\r\nimport { Link } from 'react-router-dom';\r\nexport default class Mainfuncionarios extends Component {\r\n    state = {\r\n        funcionarios: [],\r\n        funcionarioInfo: {},\r\n        page: 1,\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.loadFuncionarios();\r\n    }\r\n\r\n    loadFuncionarios = async ( page = 1 ) => {\r\n        const response = await api.get(`/funcionario?page=${page}`);\r\n\r\n        const { docs, ... funcionarioInfo } = response.data;\r\n\r\n        this.setState({ funcionarios: docs, funcionarioInfo, page });\r\n    }\r\n\r\n    nextPage = () => {\r\n        const { page, funcionarioInfo } = this.state;\r\n\r\n        if (page === funcionarioInfo.pages) return;\r\n\r\n        const pageNumber = page+1;\r\n        \r\n        this.loadFuncionarios(pageNumber);\r\n    };\r\n    prevPage = () => {\r\n        const { page, funcionarioInfo } = this.state;\r\n\r\n        if (page === 1) return;\r\n\r\n        const pageNumber = page - 1;\r\n\r\n        this.loadFuncionarios(pageNumber);\r\n    };\r\n\r\n    render(){\r\n        const {funcionarios, page, funcionarioInfo} = this.state;\r\n\r\n        return (\r\n            <div className=\"funcionario-list\">\r\n                {funcionarios.map(funcionario => (\r\n                    <article key={funcionario._id}>\r\n                        <p><strong>CPF:</strong> '{funcionario.cpf}'</p>\r\n                        <p><strong>Nome do funcionario:</strong> {funcionario.nome}</p>\r\n                        <p><strong>Url:</strong> '{funcionario.url}'</p>\r\n                        <Link to={`/funcionarios/${funcionario._id}`}>Consultar</Link>\r\n                        <br /><br />\r\n                    </article>\r\n                ))}\r\n                <div className=\"actions\">\r\n                    <button disabled={page === 1} onClick={this.prevPage}>\r\n                        Anterior\r\n                    </button>\r\n                    <Link to={`/novofuncionario`}>Adiconar um Funcionario</Link>\r\n                    <button disabled={page === funcionarioInfo.pages} onClick={this.nextPage}>\r\n                        Próxima\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );  \r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport api from '../../services/api';\r\nimport { Link } from 'react-router-dom';\r\nimport './styles.css';\r\nexport default class NovoFuncionario extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            funcionario: {},\r\n            cpf: '',\r\n            nome:'',\r\n            url: '',\r\n        };\r\n    }\r\n    handleChange = event => {\r\n        this.setState({[event.target.name] : event.target.value}, ()=>{\r\n            if (this.state.cpf != '')\r\n            this.state.funcionario.cpf = this.state.cpf;\r\n            if (this.state.nome != '')\r\n                this.state.funcionario.nome = this.state.nome;\r\n            if (this.state.url != '')\r\n                this.state.funcionario.url = this.state.url;\r\n            console.log(this.state.funcionario);\r\n        });\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        const funcionario = this.state.funcionario;\r\n\r\n        //const { id } = this.props.match.params;\r\n\r\n        api.post('funcionario/', funcionario);\r\n\r\n        alert('sucesso.');\r\n    }\r\n\r\n\r\n    render(){\r\n        const { funcionario } = this.state;\r\n\r\n        return (\r\n            <div className=\"funcionario-info\">\r\n            <form onSubmit={this.handleSubmit}>\r\n            <table>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>\r\n                             <p><strong>CPF:</strong></p>\r\n                        </td>\r\n                         <td>\r\n                             <input name=\"cpf\" className=\"funcionarior-cpf\" onChange={this.handleChange} />\r\n                        </td>\r\n                    </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <p><strong>Nome:</strong></p>\r\n                            </td>\r\n                            <td>\r\n                                <input name=\"nome\" className=\"funcionario-name\" onChange={this.handleChange}/>\r\n                            </td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td>\r\n                                <p><strong>URL:</strong></p>\r\n                            </td>\r\n                            <td>\r\n                                <input name=\"url\" className=\"funcionario-url\" onChange={this.handleChange}/>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div className=\"actions\">\r\n                    <Link to={`/funcionarios`}>Voltar</Link>\r\n                    <button type=\"submit\" onClick={this.handleChange}>\r\n                        Criar\r\n                    </button>\r\n                </div>\r\n            </form>\r\n             \r\n        </div>\r\n    );\r\n}\r\n}","import React from \"react\";\r\nimport { BrowserRouter, Switch , Route } from 'react-router-dom';\r\nimport Main from \"./pages/main\";\r\nimport Funcionario from \"./pages/funcionario\";\r\nimport Customer from './pages/customer';\r\nimport New_Customer from './pages/new_customer';\r\nimport User from './pages/user';\r\nimport Mainfuncionarios from './pages/Mainfuncionarios';\r\nimport NovoFuncionario from './pages/novofuncionario';\r\n\r\nconst Routes = () =>( \r\n<BrowserRouter>\r\n    <Switch>\r\n\r\n            <Route exact path=\"/customers\" component={Main} />\r\n            <Route path=\"/customers/:id\" component={Customer} />\r\n            <Route path=\"/new_customer\" component={New_Customer} />\r\n            <Route path=\"/user\" component={User} />\r\n\r\n        <Route exact path=\"/funcionarios\" component={Mainfuncionarios} />\r\n        <Route path=\"/funcionarios/:id\" component={Funcionario}/>\r\n        <Route path=\"/novofuncionario\" component={NovoFuncionario} />\r\n    </Switch>\r\n</BrowserRouter>\r\n);\r\nexport default Routes;\r\n//<Route exact path=\"/\" component={Main}/>","import React from 'react' ;//crio componente Header\r\nimport './styles.css';\r\nconst Header = () => <header id=\"main-header\">LOJA DE ROUPAS</header>\r\n\r\nexport default Header;","import React from 'react';//react divide uam pagina em varios componentes\nimport Routes from \"./routes\";\nimport \"./styles.css\";\nimport Header from './componentes/Header';\n\n /*enves de mostrar mais la embaixo mostra as rotas*/\nconst App = () => (\n    <div className=\"App\">\n      <Header/>\n      <Routes/>\n    </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}